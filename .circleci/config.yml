version: 2
jobs:
  setup:
    docker:
      - image: circleci/node:10.16.0
      - image: circleci/php:7.1-apache-node-browsers # The primary container where steps are run
      - image: circleci/mysql:5.7.27
        environment:
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: chartbrewdev
          MYSQL_USER: root

    working_directory: ~/chartbrew

    steps:
      - checkout

      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get install default-mysql-client
#            mysql -h 127.0.0.1 -u root chartbrewdev

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: npm run setup

      - save_cache:
          paths:
            - node_modules
            - client/node_modules
            - server/node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

  # lint the server project
  lint1:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/chartbrew
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Linting server code
          command: cd server && npm run lint

  build1:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/chartbrew
    # Build the client
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Building semantic
          command: cd client && cp -Rn node_modules/fomantic-ui/tasks src/semantic && cp -Rn node_modules/fomantic-ui/src src/semantic && mv src/semantic/src/_site src/semantic/src/site && mv src/semantic/src/theme.config.example src/semantic/src/theme.config && cd src/semantic && npx gulp build
      - run:
          name: Building the client
          command: cd client && npm run build

  build2:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/chartbrew
    # build the docs
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Building the docs
          command: npm run docs:build

workflows:
  version: 2
  setup_and_build:
    jobs:
      - setup
      - lint1:
          requires:
            - setup
      - build1:
          requires:
            - setup
      - build2:
          requires:
            - setup
